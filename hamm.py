s="TTGTGCCTCCCAAGATCTTTCATCACGTTTGCGTTAGTTCTGAAAAGGTCGACGAGCATCAAGGAAAAGCCTTTTAATCGCGCTTGGGGTGGCCAGAATCCCTGGGGGAATTGACTACGGACTTCTCTATTGAGAGATTGCTTTCCGAACTAGGCGACTATGTCTATTGCAATACCTAAAATCTTGACGCGCCTACGTTTGACTGAACTATTACTGGGGGTGTCGCCTTCGGCCCCAGGTATAACAGTGCGATTTGACTCTTTCTTAAAGTTCTCCCTGATGGACCCGGACGCTTCGAGCTGAATGGCGCAGGCGGTCTAGCACTCGTTCGGGCGAGACTGGTAGAGCAATTGCAATCGTATGGTGTCGCGAGCGAGCGAGGTTATGATGCCATGATTCGTGCGTGCAATCAGCGCGGTCCTTGGTCAACTAAGTCCATTACTAAGCAGGAATCCATCGGAGCGTTGGCTCTATATAGTGAAACGATTCCGCAGCCTAACTTCTTTGTCATCAGGGGTATCAACGAGCCCTACTTCAAGCGTCCGTTCGGTTTTAGGACGAGCAAGAGATACCCCCAAATGACCATAAAGCTTCAGCCTTACCTCTCCATAGGCCTTCAAGGAGCGTTAGGAGATCATCATGAACGATAATGGTTTGTCACACGTTGTAGATGCGCTCGGCTCGTAAAGGCGAATTGTCGCGGCTGGTCCTATGGATATTTCCGACCGTCTCTCGAGACTCGTCGGAGCCACCGGTGTACATATAGAGTGATATGATATAACGGTCCAAGTCCTTGGAGAGTCTGAGTGAAGCGTCAACTGGGCTCACGTGTCAAGCACCCATTCTAAACTTCTTAGATAGGTAAGAGAGACCGCACTTAGGTGTTTCGCGTAGTCCCGCGTACAATCCACTGCGGTCGGGCTTCACACAGCGACGGTGCCCATTGAAGGAGACTAAATACTTAGCACGACA"
t="GTGTATCCCCTAACATGGCCAATCGGGCTTACTTCAGCTCCATGATAGTCGAGTATGACTACGGTGAACGGGTTGAGACGAGCCTCTGACTGACAGCCTAGTGTGGGACACTATCAGAGGTTCTTCATATGCGTGGTTCTAGTGCCAAACTCGGCGACTGTGTATATGGCATTACGTTACTTTCAGACAAAGCATTGGATGACTGGAACCATACCGCCGTCGCAAGCGGGTACCTCGGGTATGCTTACGCGATATTTCCGTAACTCAACGGGAACATGCATGGAATCGGTCGCTGGGAACTGACCCCCACAGGACTCTTATGAGTCGCTCCCTTGTGACTCTTACACAGTTGTGAACTTCACGGATCTTCGAGAGTGTGAGCGTAGGCAGCCTTCAGATGCGCGTGGTTTGGACATGGTTCTTATCAGCCACATTCGATTACTAAGCCGGCTTTTATCAGTCCGTCGGCTTTTTATAGTGAAACATTTCCACTGCTGAGCCGGATTCATTTTGAAAGGAGCTGCGAATCCTGGCTCCTTTGCCTTTTAGTGTTTACATCGATCATGAGATACCACCATCTGGGTGTCGAGCTCAACCCTCAGCTGTCCAGGGGCCAATTAAGATTAACAGCAGCTGATCACGCCCGCTGGTGATTAATCGCCAGTTTGAAAAGGTTGCTACACCTAACCCCCGAGCCCTGCGGCTGGAGATACTTATATTCCAAATCATCGAGGGACACACGGCCGCCTTACTGATGGTAATGTCAAGTGGTAACATGGACCAGCCCGAATACCTGTAGTTCCTGCATCAAGTTCGAACCGATCTTACCGTACATGCACCACCTGTGTAGGTCGTGACGAAGATCGATGAGGCGCAAGCGTCTGTTTTCGGCATTGGTAGGCGTGGCCTGCTGGTCTCACGCTTGATTTCGGCTGTCTACACGGGTAAAGTGCTTAAATTCTTCGACCGACA"

def hammingDistance(s,t):
    hamming = 0
    index = 0
    for i in s:
        if s[index] != t[index]:
            hamming += 1
        index += 1
    return hamming
print (hammingDistance(s,t))
